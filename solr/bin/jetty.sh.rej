***************
*** 419,668 ****
  # Determine which JVM of version >1.2
  # Try to use JAVA_HOME
  ##################################################
- if [ "$JAVA" = "" -a "$JAVA_HOME" != "" ]
  then
-   if [ ! -z "$JAVACMD" ] 
    then
-      JAVA="$JAVACMD" 
    else
-     [ -x $JAVA_HOME/bin/jre -a ! -d $JAVA_HOME/bin/jre ] && JAVA=$JAVA_HOME/bin/jre
-     [ -x $JAVA_HOME/bin/java -a ! -d $JAVA_HOME/bin/java ] && JAVA=$JAVA_HOME/bin/java
    fi
  fi
  
- if [ "$JAVA" = "" ]
  then
-     echo "Cannot find a JRE or JDK. Please set JAVA_HOME to a >=1.2 JRE" 2>&2
-     exit 1
  fi
  
- JAVA_VERSION=`expr "$($JAVA -version 2>&1 | head -1)" : '.*1\.\([0-9]\)'`
  
  #####################################################
  # See if JETTY_PORT is defined
  #####################################################
- if [ "$JETTY_PORT" != "" ] 
  then
-   JAVA_OPTIONS="$JAVA_OPTIONS -Djetty.port=$JETTY_PORT"
  fi
  
  #####################################################
  # See if JETTY_LOGS is defined
  #####################################################
- if [ "$JETTY_LOGS" != "" ]
  then
-   JAVA_OPTIONS="$JAVA_OPTIONS -Djetty.logs=$JETTY_LOGS"
  fi
  
  #####################################################
- # Are we running on Windows? Could be, with Cygwin/NT.
- #####################################################
- case "`uname`" in
- CYGWIN*) PATH_SEPARATOR=";";;
- *) PATH_SEPARATOR=":";;
- esac
- 
- 
- #####################################################
  # Add jetty properties to Java VM options.
  #####################################################
- JAVA_OPTIONS="$JAVA_OPTIONS -Djetty.home=$JETTY_HOME -Djava.io.tmpdir=$TMP"
  
- [ -f $JETTY_HOME/etc/start.config ] && JAVA_OPTIONS="-DSTART=$JETTY_HOME/etc/start.config $JAVA_OPTIONS"
  
  #####################################################
  # This is how the Jetty server will be started
  #####################################################
  
  JETTY_START=$JETTY_HOME/start.jar
- [ ! -f $JETTY_START ] && JETTY_START=$JETTY_HOME/lib/start.jar
  
- RUN_ARGS="$JAVA_OPTIONS -jar $JETTY_START $JETTY_ARGS $CONFIGS"
- RUN_CMD="$JAVA $RUN_ARGS"
  
  #####################################################
  # Comment these out after you're happy with what 
  # the script is doing.
  #####################################################
- #echo "JETTY_HOME     =  $JETTY_HOME"
- #echo "JETTY_CONF     =  $JETTY_CONF"
- #echo "JETTY_RUN      =  $JETTY_RUN"
- #echo "JETTY_PID      =  $JETTY_PID"
- #echo "JETTY_ARGS     =  $JETTY_ARGS"
- #echo "CONFIGS        =  $CONFIGS"
- #echo "JAVA_OPTIONS   =  $JAVA_OPTIONS"
- #echo "JAVA           =  $JAVA"
- 
  
  ##################################################
  # Do the action
  ##################################################
  case "$ACTION" in
    start)
-         echo -n "Starting Jetty: "
  
-         if [ "$NO_START" = "1" ]; then 
- 	  echo "Not starting jetty - NO_START=1 in /etc/default/jetty6";
-           exit 0;
- 	fi
- 
- 
- 	if type start-stop-daemon > /dev/null 2>&1 
- 	then
-           [ x$JETTY_USER = x ] && JETTY_USER=$(whoami)
- 	  [ $UID = 0 ] && CH_USER="-c $JETTY_USER"
- 	  if start-stop-daemon -S -p$JETTY_PID $CH_USER -d $JETTY_HOME -b -m -a $JAVA -- $RUN_ARGS 
- 	  then
- 	      sleep 1
- 	      if running $JETTY_PID
- 	      then
-                   echo OK
-               else
-                   echo FAILED
-               fi
- 	  fi
- 
- 	else
- 
-           if [ -f $JETTY_PID ]
-           then            
-             if running $JETTY_PID
-             then
-               echo "Already Running!!"
-               exit 1
-             else
-               # dead pid file - remove
-               rm -f $JETTY_PID
-             fi
-           fi
- 
-           if [ x$JETTY_USER != x ] 
-           then
-               touch $JETTY_PID
-               chown $JETTY_USER $JETTY_PID
-               su - $JETTY_USER -c "
-                 $RUN_CMD &
-                 PID=\$!
-                 disown \$PID
-                 echo \$PID > $JETTY_PID"
-           else
-               $RUN_CMD &
-               PID=$!
-               disown $PID
-               echo $PID > $JETTY_PID
-           fi
  
-           echo "STARTED Jetty `date`" 
          fi
  
-         ;;
  
    stop)
-         echo -n "Stopping Jetty: "
- 	if type start-stop-daemon > /dev/null 2>&1; then
- 	  start-stop-daemon -K -p $JETTY_PID -d $JETTY_HOME -a $JAVA -s HUP 
- 	  sleep 1
- 	  if running $JETTY_PID
- 	  then
- 	      sleep 3
- 	      if running $JETTY_PID
- 	      then
- 		  sleep 30
- 	          if running $JETTY_PID
- 	          then
- 	             start-stop-daemon -K -p $JETTY_PID -d $JETTY_HOME -a $JAVA -s KILL
- 		  fi
-               fi
- 	  fi
- 
- 	  rm -f $JETTY_PID
-           echo OK
- 	else
- 	  PID=`cat $JETTY_PID 2>/dev/null`
-           TIMEOUT=30
-           while running $JETTY_PID && [ $TIMEOUT -gt 0 ]
-           do
-             kill $PID 2>/dev/null
-             sleep 1
-             let TIMEOUT=$TIMEOUT-1
-           done
-           
-           [ $TIMEOUT -gt 0 ] || kill -9 $PID 2>/dev/null
- 
- 	  rm -f $JETTY_PID
-           echo OK
- 	fi
-         ;;
  
-   restart)
-         JETTY_SH=$0
-         if [ ! -f $JETTY_SH ]; then
-           if [ ! -f $JETTY_HOME/bin/jetty.sh ]; then
-             echo "$JETTY_HOME/bin/jetty.sh does not exist."
-             exit 1
-           fi
-           JETTY_SH=$JETTY_HOME/bin/jetty.sh
          fi
-         $JETTY_SH stop $*
-         sleep 5
-         $JETTY_SH start $*
-         ;;
  
    supervise)
-        #
-        # Under control of daemontools supervise monitor which
-        # handles restarts and shutdowns via the svc program.
-        #
-          exec $RUN_CMD
-          ;;
  
    run|demo)
-         echo "Running Jetty: "
  
-         if [ -f $JETTY_PID ]
-         then
-             if running $JETTY_PID
-             then
-               echo "Already Running!!"
-               exit 1
-             else
-               # dead pid file - remove
-               rm -f $JETTY_PID
-             fi
-         fi
  
-         exec $RUN_CMD
-         ;;
  
-   check)
-         echo "Checking arguments to Jetty: "
-         echo "JETTY_HOME     =  $JETTY_HOME"
-         echo "JETTY_CONF     =  $JETTY_CONF"
-         echo "JETTY_RUN      =  $JETTY_RUN"
-         echo "JETTY_PID      =  $JETTY_PID"
-         echo "JETTY_PORT     =  $JETTY_PORT"
-         echo "JETTY_LOGS     =  $JETTY_LOGS"
-         echo "CONFIGS        =  $CONFIGS"
-         echo "JAVA_OPTIONS   =  $JAVA_OPTIONS"
-         echo "JAVA           =  $JAVA"
-         echo "CLASSPATH      =  $CLASSPATH"
-         echo "RUN_CMD        =  $RUN_CMD"
-         echo
-         
-         if [ -f $JETTY_RUN/jetty.pid ]
-         then
-             echo "Jetty running pid="`cat $JETTY_RUN/jetty.pid`
-             exit 0
-         fi
-         exit 1
-         ;;
  
- *)
-         usage
- 	;;
- esac
  
- exit 0
  
  
  
--- 417,658 ----
  # Determine which JVM of version >1.2
  # Try to use JAVA_HOME
  ##################################################
+ if [ -z "$JAVA" ] && [ "$JAVA_HOME" ]
  then
+   if [ "$JAVACMD" ] 
    then
+     JAVA="$JAVACMD" 
    else
+     [ -x "$JAVA_HOME/bin/jre" -a ! -d "$JAVA_HOME/bin/jre" ] && JAVA=$JAVA_HOME/bin/jre
+     [ -x "$JAVA_HOME/bin/java" -a ! -d "$JAVA_HOME/bin/java" ] && JAVA=$JAVA_HOME/bin/java
    fi
  fi
  
+ if [ -z "$JAVA" ]
  then
+   echo "Cannot find a JRE or JDK. Please set JAVA_HOME to a >=1.2 JRE" 2>&2
+   exit 1
  fi
  
+ JAVA_VERSION=$("$JAVA" -version 2>&1) || continue
+ IFS='"_' read _ JAVA_VERSION _ <<< "$JAVA_VERSION"
  
  #####################################################
  # See if JETTY_PORT is defined
  #####################################################
+ if [ "$JETTY_PORT" ] 
  then
+   JAVA_OPTIONS+=("-Djetty.port=$JETTY_PORT")
  fi
  
  #####################################################
  # See if JETTY_LOGS is defined
  #####################################################
+ if [ "$JETTY_LOGS" ]
  then
+   JAVA_OPTIONS+=("-Djetty.logs=$JETTY_LOGS")
  fi
  
  #####################################################
  # Add jetty properties to Java VM options.
  #####################################################
+ JAVA_OPTIONS+=("-Djetty.home=$JETTY_HOME" "-Djava.io.tmpdir=$TMPDIR")
  
+ [ -f "$JETTY_HOME/etc/start.config" ] && JAVA_OPTIONS=("-DSTART=$JETTY_HOME/etc/start.config" "${JAVA_OPTIONS[@]}")
  
  #####################################################
  # This is how the Jetty server will be started
  #####################################################
  
  JETTY_START=$JETTY_HOME/start.jar
+ [ ! -f "$JETTY_START" ] && JETTY_START=$JETTY_HOME/lib/start.jar
  
+ RUN_ARGS=("${JAVA_OPTIONS[@]}" -jar "$JETTY_START" $JETTY_ARGS "${CONFIGS[@]}")
+ RUN_CMD=("$JAVA" "${RUN_ARGS[@]}")
  
  #####################################################
  # Comment these out after you're happy with what 
  # the script is doing.
  #####################################################
+ if (( DEBUG ))
+ then
+   echo "JETTY_HOME     =  $JETTY_HOME"
+   echo "JETTY_CONF     =  $JETTY_CONF"
+   echo "JETTY_RUN      =  $JETTY_RUN"
+   echo "JETTY_PID      =  $JETTY_PID"
+   echo "JETTY_ARGS     =  $JETTY_ARGS"
+   echo "CONFIGS        =  ${CONFIGS[*]}"
+   echo "JAVA_OPTIONS   =  ${JAVA_OPTIONS[*]}"
+   echo "JAVA           =  $JAVA"
+ fi
  
  ##################################################
  # Do the action
  ##################################################
  case "$ACTION" in
    start)
+     echo -n "Starting Jetty: "
+ 
+     if (( NO_START )); then 
+       echo "Not starting jetty - NO_START=1";
+       exit
+     fi
  
+     if type start-stop-daemon > /dev/null 2>&1 
+     then
+       [ -z "$JETTY_USER" ] && JETTY_USER=$USER
+       (( UID == 0 )) && CH_USER=-c$JETTY_USER
+       if start-stop-daemon -S -p"$JETTY_PID" "$CH_USER" -d"$JETTY_HOME" -b -m -a "$JAVA" -- "${RUN_ARGS[@]}"
+       then
+         sleep 1
+         if running "$JETTY_PID"
+         then
+           echo "OK"
+         else
+           echo "FAILED"
+         fi
+       fi
+ 
+     else
  
+       if [ -f "$JETTY_PID" ]
+       then
+         if running $JETTY_PID
+         then
+           echo "Already Running!"
+           exit 1
+         else
+           # dead pid file - remove
+           rm -f "$JETTY_PID"
          fi
+       fi
  
+       if [ "$JETTY_USER" ] 
+       then
+         touch "$JETTY_PID"
+         chown "$JETTY_USER" "$JETTY_PID"
+         # FIXME: Broken solution: wordsplitting, pathname expansion, arbitrary command execution, etc.
+         su - "$JETTY_USER" -c "
+           ${RUN_CMD[*]} &
+           disown \$!
+           echo \$! > '$JETTY_PID'"
+       else
+         "${RUN_CMD[@]}" &
+         disown $!
+         echo $! > "$JETTY_PID"
+       fi
+ 
+       echo "STARTED Jetty `date`" 
+     fi
+ 
+     ;;
  
    stop)
+     echo -n "Stopping Jetty: "
+     if type start-stop-daemon > /dev/null 2>&1; then
+       start-stop-daemon -K -p"$JETTY_PID" -d"$JETTY_HOME" -a "$JAVA" -s HUP
+       
+       TIMEOUT=30
+       while running "$JETTY_PID"; do
+         if (( TIMEOUT-- == 0 )); then
+           start-stop-daemon -K -p"$JETTY_PID" -d"$JETTY_HOME" -a "$JAVA" -s KILL
+         fi
  
+         sleep 1
+       done
+ 
+       rm -f "$JETTY_PID"
+       echo OK
+     else
+       PID=$(cat "$JETTY_PID" 2>/dev/null)
+       kill "$PID" 2>/dev/null
+       
+       TIMEOUT=30
+       while running $JETTY_PID; do
+         if (( TIMEOUT-- == 0 )); then
+           kill -KILL "$PID" 2>/dev/null
          fi
+ 
+         sleep 1
+       done
+ 
+       rm -f "$JETTY_PID"
+       echo OK
+     fi
+ 
+     ;;
+ 
+   restart)
+     JETTY_SH=$0
+     if [ ! -f $JETTY_SH ]; then
+       if [ ! -f $JETTY_HOME/bin/jetty.sh ]; then
+         echo "$JETTY_HOME/bin/jetty.sh does not exist."
+         exit 1
+       fi
+       JETTY_SH=$JETTY_HOME/bin/jetty.sh
+     fi
+ 
+     "$JETTY_SH" stop "$@"
+     "$JETTY_SH" start "$@"
+ 
+     ;;
  
    supervise)
+     #
+     # Under control of daemontools supervise monitor which
+     # handles restarts and shutdowns via the svc program.
+     #
+     exec "${RUN_CMD[@]}"
+ 
+     ;;
  
    run|demo)
+     echo "Running Jetty: "
  
+     if [ -f "$JETTY_PID" ]
+     then
+       if running "$JETTY_PID"
+       then
+         echo "Already Running!"
+         exit 1
+       else
+         # dead pid file - remove
+         rm -f "$JETTY_PID"
+       fi
+     fi
  
+     exec "${RUN_CMD[@]}"
  
+     ;;
  
+   check)
+     echo "Checking arguments to Jetty: "
+     echo "JETTY_HOME     =  $JETTY_HOME"
+     echo "JETTY_CONF     =  $JETTY_CONF"
+     echo "JETTY_RUN      =  $JETTY_RUN"
+     echo "JETTY_PID      =  $JETTY_PID"
+     echo "JETTY_PORT     =  $JETTY_PORT"
+     echo "JETTY_LOGS     =  $JETTY_LOGS"
+     echo "CONFIGS        =  ${CONFIGS[*]}"
+     echo "JAVA_OPTIONS   =  ${JAVA_OPTIONS[*]}"
+     echo "JAVA           =  $JAVA"
+     echo "CLASSPATH      =  $CLASSPATH"
+     echo "RUN_CMD        =  ${RUN_CMD[*]}"
+     echo
+     
+     if [ -f "$JETTY_RUN/jetty.pid" ]
+     then
+       echo "Jetty running pid=$(< "$JETTY_RUN/jetty.pid")"
+       exit 0
+     fi
+     exit 1
  
+     ;;
  
+   *)
+     usage
  
+     ;;
+ esac
  
+ exit 0
